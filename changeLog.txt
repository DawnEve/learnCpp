version changes of this C++ note system.

v0.1 empty repo in Docker, can view on 3000 port, host 8003
v0.2 add how to make this book 
v0.3 correct sidebar
v0.4 P1-P68
v0.5 to P82/864
v0.6 to P112/864, vector
v0.6.1 fix links
v0.6.2 add vector
v0.6.3 add string, array
v0.6.4 add array
    Jump 多维数组: P112, pdf138/864; done;
v0.6.5 add expression, flow
v0.6.6 fix links and log
v0.6.7 add fun, P221/864
v0.6.8 fix home page
v0.6.9 add 多维数组;
v0.7.0 add fn return
v0.7.1 add 返回左值的函数
v0.7.2 add 返回数组指针: int (*func(int i))[10];
v0.7.3 add auto and decltype, P62
v0.7.4 add 函数重载 回顾 const_cast
v0.7.5 add 默认实参, 内联函数 P215
    开始在本log行后记录页码
v0.7.6 add assert, NDEBUG, 二义调用 P220
v0.7.7 add 函数指针 P227

v0.7.8 begin chapter7 P227
v0.7.9 add 返回引用的函数可以做左值 P235
v0.8.0 add 类的构造函数 P240
v0.8.1 add 友元，mutable，链式调用 P250
    move chapter 1 code to A1/1/
v0.8.2 add 友元类、友元成员函数、类中使用的名字查找顺序 P258
v0.8.3 add 构造函数再探 P269
v0.8.4 add static in class P275
    # new chapter;
v0.8.4 add favicon.ico
v0.8.5 add stream 以引用做形参或者返回类型 P281
v0.8.6 add 文件读写流 P286
v0.8.7 add 文件打开模式 P287
v0.8.8 add 字符流; 第八章 IO 库 end P290
v0.8.9 第九章 顺序容器 P299
v0.9.0 第九章 顺序容器 P302 容器定义与初始化
v0.9.1 第九章 顺序容器 P304 容器大小操作
v0.9.2 add 9.3 顺序容器操作 大纲 P305
v0.9.3 add 9.3 顺序容器操作 insert P307
v0.9.4 add 9.3 顺序容器操作 insert P308
v0.9.5 add 9.3 顺序容器操作 pop P312
v0.9.6 add 9.4 vector 对象是如何增长的 P317
v0.9.7 add Z1/CMake/
v0.9.8 now 9.5 额外的 string 操作 P321
v0.9.9 now 9.5 额外的 string 操作 P323
v1.0.0 now 10.1 泛型算法 P336
v1.0.1 now 10.1 泛型算法 P337 [2022.11.20]
    日拱一页：开始
v1.0.1-1 now 10.2 泛型算法 P338 [2022.11.21]
v1.0.1-2 now 10.2 泛型算法 P339 [2022.11.22]
v1.0.1-3 now 10.2 泛型算法 P340 [2022.11.25]
v1.0.1-4 now 10.2 泛型算法 P342 [2022.11.26]
v1.0.1-5 now 10.3 泛型算法 P345 [2022.11.30]
v1.0.1-6 now 10.3 泛型算法 P347 [2022.12.1]
v1.0.1-7 lambda 表达式 P349 [2022.12.3]
## --> commit [使用印刷页码]
## ==========> push to github: 






==> befor commit:
  使用书本的印刷页码，不要使用pdf的页码。
  log current pages in /Z1/2_reading_logs.md
  update version in header of /README.md


经常犯的错:
    * class A{}; 定义后要有分号;
    * class 成员默认都是 private 的， struct 成员默认都是public的；
    * 使用 文件读写流，要加头文件 `#include<fstream>`
    * 使用 字符流，要加头文件 `#include<sstream>`


==> 勘误表：发现好几个错误了，不过从P247开始记录。另见 Z1/4_error_logs.md
    P247: 倒数第12行： display的返回类型应该是: "const Screen&".
    P264: 倒数第8行：使用istream构造函数创建一个对象(函数)传递给combine
    P268: 第一段代码 any() 后面少了一个 const，否则报错。

==> How to view locally?
    127.0.0.1:8003

